!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@aws-amplify/core"),require("@aws-amplify/geo"),require("maplibre-gl"),require("@maplibre/maplibre-gl-geocoder")):"function"==typeof define&&define.amd?define(["exports","@aws-amplify/core","@aws-amplify/geo","maplibre-gl","@maplibre/maplibre-gl-geocoder"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).AmplifyMapLibre={},e.aws_amplify_core,e.aws_amplify_geo,e.maplibregl,e.MaplibreGeocoder)}(this,(function(e,t,r,o,i){"use strict";function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=n(o),a=n(i);function c(e){return Array.isArray(e)&&"number"==typeof e[0]&&"number"==typeof e[1]}function l(e){return(t=e[0])&&Array.isArray(t.coordinates)&&"number"==typeof t.coordinates[0]&&"number"==typeof t.coordinates[1];var t}const u=e=>"string"==typeof e&&e.length>0,d=e=>{let t;return t=c(e[0])?e.map((e=>({type:"Feature",geometry:{type:"Point",coordinates:e},properties:{place_name:`Coordinates,${e}`}}))):l(e)?e.map((e=>({type:"Feature",geometry:{type:"Point",coordinates:e.coordinates},properties:{title:e.title,address:e.address}}))):e,t};var p=function(e,t,r,o){return new(r||(r=Promise))((function(i,n){function s(e){try{c(o.next(e))}catch(e){n(e)}}function a(e){try{c(o.throw(e))}catch(e){n(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))},f=function(e,t){var r={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(r[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(o=Object.getOwnPropertySymbols(e);i<o.length;i++)t.indexOf(o[i])<0&&Object.prototype.propertyIsEnumerable.call(e,o[i])&&(r[o[i]]=e[o[i]])}return r};class y{constructor(e,r){this.refreshCredentials=()=>p(this,void 0,void 0,(function*(){try{this.credentials=yield t.Amplify.Auth.currentCredentials()}catch(e){throw console.error(`Failed to refresh credentials: ${e}`),e}})),this.refreshCredentialsWithRetry=()=>p(this,void 0,void 0,(function*(){yield t.jitteredExponentialRetry(this.refreshCredentials,[],3e5),this.activeTimeout&&clearTimeout(this.activeTimeout);const e=new Date(this.credentials.expiration).getTime()-(new Date).getTime()-1e4;this.activeTimeout=window.setTimeout(this.refreshCredentialsWithRetry,e)})),this.transformRequest=(e,r)=>{if("Style"!==r||e.includes("://")||(e=`https://maps.geo.${this.region}.amazonaws.com/maps/v0/maps/${e}/style-descriptor`),e.includes("amazonaws.com")){const r=e+`?x-amz-user-agent=${encodeURIComponent((o=t.getAmplifyUserAgent(),o.replace(/\./g,"%2E")))}`;return{url:t.Signer.signUrl(r,{access_key:this.credentials.accessKeyId,secret_key:this.credentials.secretAccessKey,session_token:this.credentials.sessionToken})}}var o},this.credentials=e,this.region=r,this.activeTimeout=null,this.refreshCredentialsWithRetry(),t.Hub.listen("auth",(e=>{switch(e.payload.event){case"signIn":case"signOut":case"tokenRefresh":this.refreshCredentialsWithRetry()}}))}}y.createMapLibreMap=e=>p(void 0,void 0,void 0,(function*(){const{region:i,mapConstructor:n=o.Map}=e,s=f(e,["region","mapConstructor"]),a=r.Geo.getDefaultMap(),c=new y(yield t.Amplify.Auth.currentCredentials(),i||a.region).transformRequest;return new n(Object.assign(Object.assign({},s),{style:e.style||a.mapName,transformRequest:c}))}));const h="#fff",m="#5d8aff",g="M24.8133 38.533C18.76 31.493 13 28.8264 13 20.8264C13.4827 14.9864 16.552 9.67169 21.368 6.33302C33.768 -2.26165 50.824 5.78902 52.0667 20.8264C52.0667 28.613 46.5733 31.6797 40.6533 38.373C32.4933 47.5464 35.4 63.093 32.4933 63.093C29.72 63.093 32.4933 47.5464 24.8133 38.533ZM32.4933 8.23969C26.5573 8.23969 21.7467 13.0504 21.7467 18.9864C21.7467 24.9224 26.5573 29.733 32.4933 29.733C38.4293 29.733 43.24 24.9224 43.24 18.9864C43.24 13.0504 38.4293 8.23969 32.4933 8.23969Z";var b;!function(e){e.ESRI_TOPOGRAPHIC="VectorEsriTopographic",e.ESRI_STREETS="VectorEsriStreets",e.ESRI_LIGHT_GRAY="VectorEsriLightGrayCanvas",e.ESRI_DARK_GRAY="VectorEsriDarkGrayCanvas",e.ESRI_NAVIGATION="VectorEsriNavigation",e.HERE_BERLIN="VectorHereBerlin"}(b||(b={}));const v={[b.ESRI_TOPOGRAPHIC]:"Noto Sans Regular",[b.ESRI_STREETS]:"Arial Regular",[b.ESRI_LIGHT_GRAY]:"Ubuntu Regular",[b.ESRI_DARK_GRAY]:"Ubuntu Regular",[b.ESRI_NAVIGATION]:"Arial Regular",[b.HERE_BERLIN]:"Fira GO Regular"};function w(e){const t=(null==e?void 0:e.fillColor)?e.fillColor:m,r=(null==e?void 0:e.strokeColor)?e.strokeColor:h,o=(null==e?void 0:e.lineWidth)?e.lineWidth:4;return{width:64,height:64,data:new Uint8Array(16384),onAdd:function(){const e=document.createElement("canvas");e.width=this.width,e.height=this.height,this.context=e.getContext("2d")},render:function(){const e=this.context,i=new Path2D(g);return e.stroke(i),e.fillStyle=t,e.strokeStyle=r,e.lineWidth=o,e.fill(i),this.data=e.getImageData(0,0,this.width,this.height).data,!0}}}var C=function(e,t){var r={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(r[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(o=Object.getOwnPropertySymbols(e);i<o.length;i++)t.indexOf(o[i])<0&&Object.prototype.propertyIsEnumerable.call(e,o[i])&&(r[o[i]]=e[o[i]])}return r};const O="amplify-tip";function R(e,t,r){var{showMarkerPopup:i=!1}=r,n=C(r,["showMarkerPopup"]);const s=`${e}-layer-unclustered-point`,a=n.popupRender?n.popupRender:function(e,{popupBackgroundColor:t="#fff",popupBorderColor:r="#0000001f",popupBorderWidth:o=2,popupFontColor:i="#000",popupPadding:n=20,popupBorderRadius:s=4,popupTitleFontWeight:a="bold"}){return c=>{let l,d;if(u(c.properties.place_name)){const e=c.properties.place_name.split(",");l=e[0],d=e.splice(1,e.length).join(",")}else u(c.properties.title)||u(c.properties.address)?(l=c.properties.title,d=c.properties.address):(l="Coordinates",d=c.geometry.coordinates);let p=`<div class="${e}-popup" style="background: ${t}; border: ${o}px solid ${r}; color: ${i}; border-radius: ${s}px; padding: ${n}px; word-wrap: break-word; margin: -10px -10px -15px;">`;return l&&(p+=`<div class="${e}-popup-title" style="font-weight: ${a};">${l}</div>`),d&&(p+=`<div class="${e}-popup-address">${d}</div>`),p+="</div>",p}}(s,n);!function(e,{selectedColor:t="#ff9900",selectedBorderColor:r="#fff",selectedBorderWidth:o=4,defaultBorderColor:i="#fff",defaultBorderWidth:n=4,defaultColor:s="#5d8aff"}){const a=w({fillColor:s,strokeColor:i,lineWidth:n}),c=w({fillColor:t,strokeColor:r,lineWidth:o});e.addImage("inactive-marker",a,{pixelRatio:2}),e.addImage("active-marker",c,{pixelRatio:2})}(t,n);const l={id:s,type:"symbol",source:e,filter:["!",["has","point_count"]],layout:{"icon-image":"inactive-marker"}};if(t.addLayer(Object.assign({},l)),i){if(!document.getElementById(O)){const e=document.createElement("style");e.setAttribute("id",O),document.head.append(e),e.textContent=".mapboxgl-popup-tip { display: none; }"}}return t.on("click",s,(function(e){if("function"==typeof n.onClick&&n.onClick(e),t.setLayoutProperty(s,"icon-image",["match",["id"],e.features[0].id,"active-marker","inactive-marker"]),i){const r=e.features[0],i=r.geometry.coordinates;c(i)&&(new o.Popup).setLngLat(i).setHTML(a(r)).setOffset(15).addTo(t)}})),{unclusteredLayerId:s}}function x(){const e=document.createElementNS("http://www.w3.org/2000/svg","svg"),t=document.createElementNS("http://www.w3.org/2000/svg","path"),r=document.createElement("circle");return e.setAttribute("viewBox","0 0 64 64"),e.setAttribute("width","32"),e.setAttribute("height","32"),t.setAttribute("d",g),t.setAttribute("fill","#5d8aff"),r.setAttribute("fill","white"),r.setAttribute("cx","50%"),r.setAttribute("cy","50%"),r.setAttribute("r","5"),e.appendChild(r),e.appendChild(t),e}var A=function(e,t,r,o){return new(r||(r=Promise))((function(i,n){function s(e){try{c(o.next(e))}catch(e){n(e)}}function a(e){try{c(o.throw(e))}catch(e){n(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))},I=function(e,t){var r={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(r[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(o=Object.getOwnPropertySymbols(e);i<o.length;i++)t.indexOf(o[i])<0&&Object.prototype.propertyIsEnumerable.call(e,o[i])&&(r[o[i]]=e[o[i]])}return r};const E={forwardGeocode:e=>A(void 0,void 0,void 0,(function*(){const t=[];try{const o=yield r.Geo.searchByText(e.query,{biasPosition:e.proximity,searchAreaConstraints:e.bbox,countries:e.countires,maxResults:e.limit});o&&o.forEach((e=>{const{geometry:r}=e,o=I(e,["geometry"]);t.push({type:"Feature",geometry:{type:"Point",coordinates:r.point},properties:Object.assign({},o),place_name:o.label,text:o.label,center:r.point})}))}catch(e){console.error(`Failed to forwardGeocode with error: ${e}`)}return{features:t}})),reverseGeocode:e=>A(void 0,void 0,void 0,(function*(){const t=[];try{const o=yield r.Geo.searchByCoordinates(e.query,{maxResults:e.limit});if(o&&o.geometry){const{geometry:e}=o,r=I(o,["geometry"]);t.push({type:"Feature",geometry:{type:"Point",coordinates:e.point},properties:Object.assign({},r),place_name:r.label,text:r.label,center:e.point})}}catch(e){console.error(`Failed to reverseGeocode with error: ${e}`)}return{features:t}}))};e.AmplifyGeocoderAPI=E,e.AmplifyMapLibreRequest=y,e.createAmplifyGeocoder=function(e){return new a.default(E,Object.assign({maplibregl:s.default,showResultMarkers:{element:x()}},e))},e.createDefaultIcon=x,e.createMap=e=>p(void 0,void 0,void 0,(function*(){return y.createMapLibreMap(e)})),e.drawPoints=function(e,t,o,{showCluster:i=!0,clusterOptions:n={},unclusteredOptions:s={}}={},a){var c;if(!o||"function"!=typeof o.addSource||"function"!=typeof o.addLayer)throw new Error("Please use a maplibre map");const l=d(t),u=`${e}-source-points`;let p,f;o.addSource(u,{type:"geojson",data:{type:"FeatureCollection",features:l},cluster:i,clusterMaxZoom:null!==(c=n.clusterMaxZoom)&&void 0!==c?c:14,generateId:!0}),i&&({clusterLayerId:p,clusterSymbolLayerId:f}=function(e,t,{fillColor:o="#5d8aff",smCircleSize:i=60,smThreshold:n=50,mdCircleSize:s=100,mdThreshold:a=100,lgCircleSize:c=140,lgThreshold:l=500,xlCircleSize:u=180,borderWidth:d=4,borderColor:p="#fff",clusterPaint:f,onClick:y,showCount:h,clusterCountLayout:m,fontColor:g="#fff"},b){const w=`${e}-layer-clusters`,C=`${e}-layer-cluster-count`,O=Object.assign({"circle-color":["step",["get","point_count"],o,n,o,a,o,l,o],"circle-radius":["step",["get","point_count"],i,n,s,a,c,l,u],"circle-stroke-width":d,"circle-stroke-color":p},f),R={id:w,type:"circle",source:e,filter:["has","point_count"],paint:O};if(t.addLayer(Object.assign({},R)),t.on("click",w,(function(r){"function"==typeof y&&y(r);const o=t.queryRenderedFeatures(r.point,{layers:[w]}),i=o[0].properties.cluster_id,n=t.getSource(e);(function(e){return"geojson"===e.type})(n)&&n.getClusterExpansionZoom(i,(function(e,r){e||t.easeTo({center:o[0].geometry.coordinates,zoom:r})}))})),h){const o={"text-field":"{point_count_abbreviated}","text-size":24},i=b||r.Geo.getDefaultMap().style;i&&(o["text-font"]=[v[i]]);const n=Object.assign(Object.assign({},o),m),s={id:C,type:"symbol",source:e,filter:["has","point_count"],layout:n,paint:{"text-color":g}};t.addLayer(Object.assign({},s))}return{clusterLayerId:w,clusterSymbolLayerId:C}}(u,o,n,a));const{unclusteredLayerId:y}=R(u,o,s||{});return{sourceId:u,unclusteredLayerId:y,clusterLayerId:p,clusterSymbolLayerId:f}},Object.defineProperty(e,"__esModule",{value:!0})}));